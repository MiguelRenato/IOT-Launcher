{"id":"hooks/useScreenProvider.tsx","dependencies":[{"name":"C:\\Users\\User\\.node-red\\node_modules\\node-red-contrib-tv\\tsconfig.json","includedInParent":true,"mtime":1588271417000},{"name":"C:\\Users\\User\\.node-red\\node_modules\\node-red-contrib-tv\\package.json","includedInParent":true,"mtime":1593165279320},{"name":"C:\\Users\\User\\.node-red\\node_modules\\node-red-contrib-tv\\.babelrc","includedInParent":true,"mtime":1588101222000},{"name":"react","loc":{"line":1,"column":25},"parent":"C:\\Users\\User\\.node-red\\node_modules\\node-red-contrib-tv\\src\\hooks\\useScreenProvider.tsx","resolved":"C:\\Users\\User\\.node-red\\node_modules\\react\\index.js"},{"name":"./useSocket","loc":{"line":2,"column":39},"parent":"C:\\Users\\User\\.node-red\\node_modules\\node-red-contrib-tv\\src\\hooks\\useScreenProvider.tsx","resolved":"C:\\Users\\User\\.node-red\\node_modules\\node-red-contrib-tv\\src\\hooks\\useSocket.tsx"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useScreen = useScreen;\n\nvar _react = require(\"react\");\n\nvar _useSocket = require(\"./useSocket\");\n\nfunction useScreen(screenId) {\n  const [screen, setScreen] = (0, _react.useState)(null);\n  (0, _useSocket.useSocketScreensChange)(screenId, setScreen);\n  return screen;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":2,"column":0},"generated":{"line":10,"column":0}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":4,"column":6},"generated":{"line":12,"column":0}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":4,"column":16},"generated":{"line":12,"column":9}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":4,"column":6},"generated":{"line":12,"column":18}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":4,"column":26},"generated":{"line":12,"column":19}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":4,"column":6},"generated":{"line":12,"column":27}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":4,"column":43},"generated":{"line":12,"column":29}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":5,"column":2},"generated":{"line":13,"column":0}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":5,"column":8},"generated":{"line":13,"column":8}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":5,"column":9},"generated":{"line":13,"column":9}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":5,"column":8},"generated":{"line":13,"column":15}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":5,"column":17},"generated":{"line":13,"column":17}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":5,"column":8},"generated":{"line":13,"column":26}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":5,"column":30},"generated":{"line":13,"column":30}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":5,"column":55},"generated":{"line":13,"column":51}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":5,"column":30},"generated":{"line":13,"column":55}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":5,"column":2},"generated":{"line":13,"column":56}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":6,"column":2},"generated":{"line":14,"column":0}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":6,"column":25},"generated":{"line":14,"column":41}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":6,"column":2},"generated":{"line":14,"column":49}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":6,"column":35},"generated":{"line":14,"column":51}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":6,"column":2},"generated":{"line":14,"column":60}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":8,"column":2},"generated":{"line":15,"column":0}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":8,"column":9},"generated":{"line":15,"column":9}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":8,"column":2},"generated":{"line":15,"column":15}},{"source":"hooks/useScreenProvider.tsx","name":null,"original":{"line":9,"column":1},"generated":{"line":16,"column":0}}],"sources":{"hooks/useScreenProvider.tsx":"import React, { useState } from 'react'\nimport { IScreen, useSocketScreensChange } from './useSocket'\n\nexport function useScreen(screenId : string) {\n  const [screen, setScreen] = useState<IScreen | null>(null)\n  useSocketScreensChange(screenId, setScreen)\n\n  return screen\n}\n"},"lineCount":null}},"error":null,"hash":"a978c9d34a90f69f33e62cbb49bb94a6","cacheData":{"env":{}}}