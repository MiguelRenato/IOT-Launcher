{"id":"widgets/Repository.tsx","dependencies":[{"name":"C:\\Users\\User\\.node-red\\node_modules\\node-red-contrib-tv\\tsconfig.json","includedInParent":true,"mtime":1588271417000},{"name":"C:\\Users\\User\\.node-red\\node_modules\\node-red-contrib-tv\\package.json","includedInParent":true,"mtime":1593165279320},{"name":"C:\\Users\\User\\.node-red\\node_modules\\node-red-contrib-tv\\.babelrc","includedInParent":true,"mtime":1588101222000}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass WidgetRepository {\n  constructor() {\n    this.widgets = {};\n  }\n\n  register(nodeRedType, component) {\n    if (this.widgets[nodeRedType]) {\n      throw `There is already registered component with type: ${nodeRedType}`;\n    }\n\n    this.widgets[nodeRedType] = component;\n  }\n\n  find(nodeRedType) {\n    if (!this.widgets[nodeRedType]) {\n      throw `Could not find component for: ${nodeRedType}`;\n    }\n\n    return this.widgets[nodeRedType];\n  }\n\n}\n\nexports.default = WidgetRepository;"},"sourceMaps":{"js":{"mappings":[{"source":"widgets/Repository.tsx","name":null,"original":{"line":10,"column":14},"generated":{"line":8,"column":0}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":10,"column":21},"generated":{"line":8,"column":6}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":10,"column":14},"generated":{"line":8,"column":22}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":10,"column":37},"generated":{"line":8,"column":23}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":10,"column":0},"generated":{"line":9,"column":0}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":10,"column":0},"generated":{"line":9,"column":2}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":10,"column":0},"generated":{"line":9,"column":13}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":10,"column":0},"generated":{"line":9,"column":16}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":11,"column":10},"generated":{"line":10,"column":0}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":11,"column":10},"generated":{"line":10,"column":9}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":11,"column":10},"generated":{"line":10,"column":16}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":13,"column":6},"generated":{"line":10,"column":19}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":11,"column":10},"generated":{"line":10,"column":21}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":30,"column":1},"generated":{"line":11,"column":0}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":15,"column":9},"generated":{"line":13,"column":0}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":15,"column":9},"generated":{"line":13,"column":2}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":15,"column":17},"generated":{"line":13,"column":10}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":15,"column":18},"generated":{"line":13,"column":11}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":15,"column":17},"generated":{"line":13,"column":22}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":15,"column":40},"generated":{"line":13,"column":24}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":15,"column":17},"generated":{"line":13,"column":33}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":15,"column":67},"generated":{"line":13,"column":35}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":16,"column":4},"generated":{"line":14,"column":0}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":16,"column":8},"generated":{"line":14,"column":8}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":16,"column":13},"generated":{"line":14,"column":13}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":16,"column":8},"generated":{"line":14,"column":20}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":16,"column":21},"generated":{"line":14,"column":21}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":16,"column":8},"generated":{"line":14,"column":32}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":16,"column":4},"generated":{"line":14,"column":33}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":16,"column":35},"generated":{"line":14,"column":35}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":17,"column":6},"generated":{"line":15,"column":0}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":17,"column":12},"generated":{"line":15,"column":12}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":17,"column":64},"generated":{"line":15,"column":64}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":17,"column":75},"generated":{"line":15,"column":75}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":17,"column":6},"generated":{"line":15,"column":77}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":18,"column":5},"generated":{"line":16,"column":0}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":20,"column":4},"generated":{"line":18,"column":0}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":20,"column":9},"generated":{"line":18,"column":9}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":20,"column":4},"generated":{"line":18,"column":16}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":20,"column":17},"generated":{"line":18,"column":17}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":20,"column":4},"generated":{"line":18,"column":28}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":20,"column":32},"generated":{"line":18,"column":32}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":20,"column":4},"generated":{"line":18,"column":41}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":21,"column":3},"generated":{"line":19,"column":0}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":23,"column":9},"generated":{"line":21,"column":0}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":23,"column":9},"generated":{"line":21,"column":2}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":23,"column":13},"generated":{"line":21,"column":6}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":23,"column":14},"generated":{"line":21,"column":7}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":23,"column":13},"generated":{"line":21,"column":18}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":23,"column":34},"generated":{"line":21,"column":20}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":24,"column":4},"generated":{"line":22,"column":0}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":24,"column":8},"generated":{"line":22,"column":8}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":24,"column":9},"generated":{"line":22,"column":9}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":24,"column":14},"generated":{"line":22,"column":14}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":24,"column":9},"generated":{"line":22,"column":21}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":24,"column":22},"generated":{"line":22,"column":22}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":24,"column":9},"generated":{"line":22,"column":33}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":24,"column":4},"generated":{"line":22,"column":34}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":24,"column":36},"generated":{"line":22,"column":36}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":25,"column":6},"generated":{"line":23,"column":0}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":25,"column":12},"generated":{"line":23,"column":12}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":25,"column":45},"generated":{"line":23,"column":45}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":25,"column":56},"generated":{"line":23,"column":56}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":25,"column":6},"generated":{"line":23,"column":58}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":26,"column":5},"generated":{"line":24,"column":0}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":28,"column":4},"generated":{"line":26,"column":0}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":28,"column":11},"generated":{"line":26,"column":11}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":28,"column":16},"generated":{"line":26,"column":16}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":28,"column":11},"generated":{"line":26,"column":23}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":28,"column":24},"generated":{"line":26,"column":24}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":28,"column":11},"generated":{"line":26,"column":35}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":28,"column":4},"generated":{"line":26,"column":36}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":29,"column":3},"generated":{"line":27,"column":0}},{"source":"widgets/Repository.tsx","name":null,"original":{"line":10,"column":37},"generated":{"line":29,"column":0}}],"sources":{"widgets/Repository.tsx":"import React, { FunctionComponent } from 'react'\nimport { IWidget } from '../hooks/useSocket'\n\nexport interface IWidgetProps {\n  widget: IWidget\n}\n\nexport type WidgetComponent = FunctionComponent<IWidgetProps>\n\nexport default class WidgetRepository {\n  private widgets: {\n    [nodeRedType: string]: WidgetComponent\n  } = {}\n\n  public register(nodeRedType : string, component : WidgetComponent) {\n    if (this.widgets[nodeRedType]) {\n      throw `There is already registered component with type: ${nodeRedType}`\n    }\n\n    this.widgets[nodeRedType] = component\n  }\n\n  public find(nodeRedType : string) {\n    if (!this.widgets[nodeRedType]) {\n      throw `Could not find component for: ${nodeRedType}`\n    }\n\n    return this.widgets[nodeRedType]\n  }\n}"},"lineCount":null}},"error":null,"hash":"e0d6a32e53b7ba37620d1c60beb6fac9","cacheData":{"env":{}}}